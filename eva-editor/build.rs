extern crate gl_generator;

use gl_generator::{Api, Fallbacks, GlobalGenerator, Profile, Registry};
use std::env;
use std::fs::File;
use std::path::Path;

fn main() {
    let dest = env::var("OUT_DIR").unwrap();
    let mut file = File::create(&Path::new(&dest).join("bindings.rs")).unwrap();

    Registry::new(Api::Gl, (1, 1), Profile::Compatibility, Fallbacks::All, [
        "GL_VERSION_1_0",
        "GL_VERSION_1_1",
        "GL_VERSION_1_2",
        "GL_VERSION_1_3",
        "GL_VERSION_1_4",
        "GL_VERSION_1_5",
        "GL_VERSION_2_0",
        "GL_VERSION_2_1",
        "GL_ARB_vertex_buffer_object",
        "GL_ARB_vertex_array_object",
        "GL_ARB_framebuffer_object",
        "GL_ARB_shader_objects",
        "GL_ARB_vertex_shader",
        "GL_ARB_fragment_shader",
        "GL_ARB_texture_non_power_of_two",
        "GL_EXT_framebuffer_object",
        "GL_EXT_texture_filter_anisotropic",
        "GL_APPLE_vertex_array_object",
        "GL_ARB_instanced_arrays",
        "GL_ARB_vertex_array_object",
        "GL_ARB_vertex_buffer_object",
        "GL_ARB_vertex_program",
        "GL_ARB_vertex_shader",
        "GL_ARB_fragment_program",
        "GL_ARB_fragment_shader",
        "GL_ARB_shader_objects",
        "GL_ARB_texture_compression",
        "GL_ARB_texture_cube_map",
        "GL_ARB_texture_env_add",
        "GL_ARB_texture_env_combine",
        "GL_ARB_texture_env_dot3",
        "GL_ARB_texture_mirrored_repeat",
        "GL_ARB_texture_non_power_of_two",
        "GL_ARB_texture_rectangle",
        "GL_ARB_transpose_matrix",
        "GL_ARB_window_pos",
        "GL_EXT_blend_func_separate",
        "GL_EXT_blend_equation_separate",
        "GL_EXT_blend_minmax",
        "GL_EXT_blend_subtract",
        "GL_EXT_compiled_vertex_array",
        "GL_EXT_draw_range_elements",
        "GL_EXT_fog_coord",
        "GL_EXT_multi_draw_arrays",
        "GL_EXT_point_parameters",
        "GL_EXT_secondary_color",
        "GL_EXT_texture_compression_s3tc",
        "GL_EXT_texture_edge_clamp",
        "GL_EXT_texture_env_add",
        "GL_EXT_texture_env_combine",
        "GL_EXT_texture_env_dot3",
        "GL_EXT_texture_filter_anisotropic",
        "GL_EXT_texture_lod_bias",
        "GL_EXT_texture_object",
        "GL_EXT_vertex_array",
        "GL_EXT_vertex_weighting",
        "GL_ARB_compatibility",
        "GL_ARB_copy_buffer",
        "GL_ARB_draw_elements_base_vertex",
        "GL_ARB_draw_instanced",
        "GL_ARB_fragment_coord_conventions",
        "GL_ARB_provoking_vertex",
        "GL_ARB_sampler_objects",
        "GL_ARB_seamless_cube_map",
        "GL_ARB_sync",
        "GL_ARB_texture_multisample",
        "GL_ARB_vertex_array_bgra",
        "GL_ARB_uniform_buffer_object",
        "GL_ARB_viewport_array",
        "GL_ARB_ES2_compatibility",
        "GL_ARB_get_program_binary",
        "GL_ARB_separate_shader_objects",
        "GL_ARB_vertex_attrib_64bit",
        "GL_ARB_viewport_array",
    ])
    .write_bindings(GlobalGenerator, &mut file)
    .unwrap();
} 